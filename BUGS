
------[ Known Bugs ]---------------------------------------------------

- None, AFAiK.
	

------[ Fixed Bugs ]---------------------------------------------------

- Fixed silly segfault when compiling under Linux (and probably
	other OSes as well)  in the "__gc" metamethod.  I was calling
	free() with a Lua userdata as argument, and is the Lua GC who
	has to deal with this.

- Fixed stupid segfault when compiling with GCC 3.xx under Linux.
  The issue was that the array containing names and functions of
  the metatable was not marked with the "static" keyword, so GCC
  didn't store the table properly in the generated code.


------[ Known Issues ]-------------------------------------------------

- Data files are NOT portable across:
		- platforms with different endianness and word sizes.
		- different builds of the shelve module when one uses Gdbm and
			the other uses Ndbm (this is because Ndbm and Gdbm don't use
			the same internal file format). 

- Functions, userdata and light userdata CANNOT be encoded. If you
	try to encode one of  these you will get an error.  Particularly,
	you cannot store/encode regular or 'shelve' file handles.

- Trying to encode a table  that has references to itself produces
	an infinite loop recursion, thus a hang or a stack overflow will
	occur.

----------------------------------------------------------[ EOF ]------
